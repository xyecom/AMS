//------------------------------------------------------------------------------
//
// 说明：该文件中的内容是由代码生成器自动生成的，请勿手工修改！
//
// file name：MeasuringUnitManager.autogenerated.cs
// author: wangzhen
// create date：2011-3-29 16:18:43
//
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;

namespace XYECOM.Business
{
    public partial class MeasuringUnitManager
    {
		///<summary>
		/// 创建数据访问层对象
		///</summary>
		private static readonly XYECOM.SQLServer.MeasuringUnitAccess access =new XYECOM.SQLServer.MeasuringUnitAccess();
		
		/// <summary>
        /// 根据Id获取实体信息
        /// </summary>
        /// <param name="infoId">信息主键Id</param>
        /// <returns>数据实体对象</returns>
		public XYECOM.Model.MeasuringUnitInfo GetItem(int infoId)
		{
			return access.GetItem(infoId);
		}
		     /// <summary>
        /// 检查是否存在要添加的计量单位
        /// </summary>
        /// <param name="name">计量名称</param>
        /// <returns>true 存在 ，false 不存在</returns>
        public bool CheckUnitNmae(string name)
        {
            return unitDAL.CheckUnitNmae(name);
        }
		/// <summary>
		/// 删除操作(删除单条)
		/// </summary>
		/// <param name="infoId">信息主键Id</param>
		/// <returns>受影响的行数</returns>
		public int Delete(int infoId)
		{
			return access.Delete(infoId);
		}
		
		/// <summary>
		/// 删除操作(删除多条)
		/// </summary>
		/// <param name="infoIds">以逗号隔开的主键Id集合</param>
		/// <returns>受影响的行数</returns>
		public int DeleteByIds(string infoIds)
		{
			if(string.IsNullOrEmpty(infoIds))
			{
				return 0;
			}
			return access.DeleteByIds(infoIds);
		}
		
		
		/// <summary>
		/// 修改操作
		/// </summary>
		/// <param name="info">实体对象</param>
		/// <returns>受影响行数</returns>
		public int Update(XYECOM.Model.MeasuringUnitInfo info)
		{
			if (info == null)
			{
				return 0;
			}
			return access.Update(info);
		}
		
		/// <summary>
		/// 插入操作
		/// </summary>
		/// <param name="info">要插入的实体对象</param>
		/// <returns></returns>		
		public int Insert(XYECOM.Model.MeasuringUnitInfo info)
		{
			return access.Insert(info);
		}
		
		/// <summary>
		/// 插入操作
		/// </summary>
		/// <param name="info">要插入的实体对象</param>
		/// <param name="ceInfoid">新增信息的ID</param>
		/// <returns></returns>
		public int Insert(XYECOM.Model.MeasuringUnitInfo info,out int infoId)
		{
			return access.Insert(info,out infoId);
		}
		
		/// <summary>
		/// 获取多条记录
		/// </summary>
		/// <returns>多条记录</returns>
		public DataTable Select()
		{
			return access.Select();
		}
		/*
		/// <summary>
		/// 获取多条记录
		/// </summary>
		/// <param name="pinfo">分页条件</param>
		/// <returns>多条记录</returns>
		public DataTable GetDataTable(XYECOM.Model.PageInfo pagingDescription)
		{
			return access.GetDataTable(pagingDescription);
		}
		*/
		//符合条件的总条数
		public int Count(string strWhere)
		{
			return access.Count(strWhere);
		}		
    }
}
